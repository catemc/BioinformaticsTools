# -*- coding: utf-8 -*-
"""hammingdistance

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1joQmkwc3fU3tMsP3oMAfnaPFK6qEu1bs
"""

seq1 = 'AGCAAGAAACGAGCATATAATCAACCTACGCCGCACCGAGTTCTATCGGTGCAGTTTGAATGCATAGTAGCCCTAGAGCTACACAATGGTACCAAAAATTCAACGATTGGAACAAAATATCATGGAACACCCGGGCAACAGTGCCACTTTTATCATACTGGAAGCTTATCTGAGGTTTGTGAATTCGATTCATCCGCCCTAATCGAGGGACCCTGCACGCCGTATGGAGGAGTTAGAGAGGAGTCTGACCCGATGGGAATGTAGTATGACAGACGGCTCCCGCCTAGCCTAGCTGATGATATGTATACCAGGCTATTCACGTGCTGCCTATAATGCTTGTATAACAATGCGATGGTCAGCCAGTCCGCTCTCCCTGGGGCATATGCTGCATACCCTATGCGCAAGCCAACTCATTTAGATCAGAGTACGGCATGATCGGGGCTTAGTTTAGAAAACTGCTCGCGGTTCATTTCCCAGTATCGTCTTGGTTAGGCCGTGTACATGGTGCGCCATCAATGGCCAGGTCCGGCCAGTGTTTCAGGACTGTTAGTCAATCTCTGTGGCTCGCATGTGCGCGAATCAAACAAAGCTTTTAGTTGGGCATGTGAGTCTGGGCAGGCGATGATAGCTGTGTGCCTGGGTTTATCGCGGTAAGTACCGGGCGGACTAATCCCTCATCTGCAACCATTTTACAAACCTGGAGAGAGGACCAGCTCGCCATGCCGGCTGAGGTCTCCATGACCCAGTGGAGTGCGTTGGAAACTTGGACCCCGTGTCAGCAGATAATACTCTCGTGGCCCCTAACAGAGGCCAGTCCTAATATCAATCATGGAGCGCGTACTATTACAAGTCGGAACACTTCTATTATGCTACGTGTGCGATTTGTTTATTCACCGCCCTCATTTTGGTTATGAGTCACATTCGCCAAGGCTAACCGAAAATTAGAGCATCTATCGCTTCTTAACGGTTCCAGCTCCGCTCCTACATG'
seq2 = 'ACGGAAAGACCGAACAAGAAGCATCTTGCGCAGCACTGAGTCGTTTGTGTAAAGTATCATTCCGAAGGTGTACAAGAGGTAGTGTTCGCTGCCAAAACTTCACCGGATTGATGGAAAGAGCATCAGTCATCGGGCCCGCCGTACCAGTTACGCCGTAGTGCAAGGTGACATGGGGTATATGTGCCAGTTCCACACGTCCTCGCCCACGGAAACCGCCCCCGGGATGTACTAGATACCGATTAGTGTCACTCTATTCCTAGGTAGGTGGAAAGCACCCTGCCCCTTGTTCTTATTCATGGAAACTGGGATATGCACTAGCAGTATTGCGTAACCCCTTTATAGATCTCTTCAAATTTCTCCCTATTCATTGTCCCCGGAGGGTAAGCAGCATGTCCTCGAAACAGGCCGGCTCATCCGCGTCGGTTGACGCCTCGAGACTGTCTTACCGCAAGCAACTTGTGGCTACTAATTTCTGAATGAAGTATTCTGTAGCGCCCGGAGATGGTGTCTGGCCAATTGCCATCTATGGGCCGTCCTTCAGGAACATCTGGCCCATCAAGGGGCCTTGACAGTAGGCAGGCCCGCTAACCTATCAATTGGGCGCGTGCTTGTAGTCTGGAGATGCAAATTTGGCGACGCTGTTTATAACGGGTCGATGTGGCTCTCCTTTCAGCGTGCCGTGTGCCAGTTCTCCCACACCGACTTCGGAATAGCGGTTCGTATCAGGTGAGTTATCGAGAACAGGCTGCGATGCCGGTTGAATATGCATGAACATGGAGATGCTGTTTCTCAATTGCACCCGAGCTCAGACCATACCTTATTACGATCGCGCGTGGAGCAGGATTACCTATGGGATCACAACTTTGATGTTCGGCGTAGTATAGATCTTTTCGCCGCCTCAAGCCCTAGGTATACACGCATTCTCTAACCCCCAGCGAGGGTTATTGCGACTAACGCCTTCTAGAGCTTCCCCGTCGGCGCCTGCCTG'
def hamming(sequence1, sequence2):
  mutcount = 0
  for i in range(len(sequence1)):
    if sequence1[i] != sequence2[i]:
      mutcount += 1
  return print(mutcount)

hamming(seq1, seq2)